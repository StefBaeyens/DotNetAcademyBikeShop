// <auto-generated />
using System;
using DotNetAcademy.BikeShop.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotNetAcademy.BikeShop.Infrastructure.Migrations
{
    [DbContext(typeof(BikeShopDbContext))]
    [Migration("20201105080423_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DotNetAcademy.BikeShop.Domain.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "xonj3srv",
                            Price = 247.87m
                        },
                        new
                        {
                            Id = 2,
                            Name = "12ntd0b3",
                            Price = 120.01m
                        },
                        new
                        {
                            Id = 3,
                            Name = "qxyga3rn",
                            Price = 50.14m
                        },
                        new
                        {
                            Id = 4,
                            Name = "fjeb1eau",
                            Price = 243.33m
                        },
                        new
                        {
                            Id = 5,
                            Name = "pfphjt3l",
                            Price = 446.06m
                        },
                        new
                        {
                            Id = 6,
                            Name = "gsbu1xbh",
                            Price = 152.22m
                        },
                        new
                        {
                            Id = 7,
                            Name = "4e2h1qp1",
                            Price = 151.46m
                        },
                        new
                        {
                            Id = 8,
                            Name = "syvkdzhg",
                            Price = 183.49m
                        },
                        new
                        {
                            Id = 9,
                            Name = "ypo24ciy",
                            Price = 318.09m
                        },
                        new
                        {
                            Id = 10,
                            Name = "yzxmnf2h",
                            Price = 170.56m
                        },
                        new
                        {
                            Id = 11,
                            Name = "lnfw1xlc",
                            Price = 446.69m
                        },
                        new
                        {
                            Id = 12,
                            Name = "omn0n1ww",
                            Price = 79.54m
                        },
                        new
                        {
                            Id = 13,
                            Name = "tl5nw2wm",
                            Price = 69.13m
                        },
                        new
                        {
                            Id = 14,
                            Name = "tcbn1bc1",
                            Price = 223.08m
                        },
                        new
                        {
                            Id = 15,
                            Name = "odqdsnft",
                            Price = 202.55m
                        },
                        new
                        {
                            Id = 16,
                            Name = "y0xbcrul",
                            Price = 417.76m
                        },
                        new
                        {
                            Id = 17,
                            Name = "n2vlpi0v",
                            Price = 116.78m
                        },
                        new
                        {
                            Id = 18,
                            Name = "gr5t2ydt",
                            Price = 251.63m
                        },
                        new
                        {
                            Id = 19,
                            Name = "4axd2bww",
                            Price = 104.43m
                        },
                        new
                        {
                            Id = 20,
                            Name = "qxuebmqk",
                            Price = 159.06m
                        },
                        new
                        {
                            Id = 21,
                            Name = "ukkuz2x5",
                            Price = 284.74m
                        },
                        new
                        {
                            Id = 22,
                            Name = "t3eozwiw",
                            Price = 27.31m
                        },
                        new
                        {
                            Id = 23,
                            Name = "pcl1q22d",
                            Price = 212.97m
                        },
                        new
                        {
                            Id = 24,
                            Name = "eao022mu",
                            Price = 212.37m
                        },
                        new
                        {
                            Id = 25,
                            Name = "w4omo45c",
                            Price = 0.22m
                        },
                        new
                        {
                            Id = 26,
                            Name = "hlvafxuz",
                            Price = 248.5m
                        },
                        new
                        {
                            Id = 27,
                            Name = "y5y0p2fh",
                            Price = 216.13m
                        },
                        new
                        {
                            Id = 28,
                            Name = "e1njyuuy",
                            Price = 33.96m
                        },
                        new
                        {
                            Id = 29,
                            Name = "1egphjve",
                            Price = 386.55m
                        },
                        new
                        {
                            Id = 30,
                            Name = "1rc2awvm",
                            Price = 258.93m
                        },
                        new
                        {
                            Id = 31,
                            Name = "s3yi4gbx",
                            Price = 287.81m
                        },
                        new
                        {
                            Id = 32,
                            Name = "5bshs3xi",
                            Price = 196.5m
                        },
                        new
                        {
                            Id = 33,
                            Name = "gw12fvze",
                            Price = 30.57m
                        },
                        new
                        {
                            Id = 34,
                            Name = "nbrokts5",
                            Price = 140.99m
                        },
                        new
                        {
                            Id = 35,
                            Name = "3mtxr50g",
                            Price = 162.24m
                        },
                        new
                        {
                            Id = 36,
                            Name = "s1biki5e",
                            Price = 384.36m
                        },
                        new
                        {
                            Id = 37,
                            Name = "wdgpr0en",
                            Price = 394.64m
                        },
                        new
                        {
                            Id = 38,
                            Name = "c1d5nxjo",
                            Price = 223.9m
                        },
                        new
                        {
                            Id = 39,
                            Name = "ueegue4r",
                            Price = 258.64m
                        },
                        new
                        {
                            Id = 40,
                            Name = "01kyqg3a",
                            Price = 108.29m
                        },
                        new
                        {
                            Id = 41,
                            Name = "iuyywf15",
                            Price = 179.05m
                        },
                        new
                        {
                            Id = 42,
                            Name = "3fxefdf0",
                            Price = 409m
                        },
                        new
                        {
                            Id = 43,
                            Name = "2k2anhia",
                            Price = 227.28m
                        },
                        new
                        {
                            Id = 44,
                            Name = "uqg43z42",
                            Price = 318.74m
                        },
                        new
                        {
                            Id = 45,
                            Name = "3xigwx4i",
                            Price = 492.7m
                        },
                        new
                        {
                            Id = 46,
                            Name = "iod5ygdh",
                            Price = 18.59m
                        },
                        new
                        {
                            Id = 47,
                            Name = "dibcxuag",
                            Price = 419.83m
                        },
                        new
                        {
                            Id = 48,
                            Name = "pxox5fqg",
                            Price = 312.75m
                        },
                        new
                        {
                            Id = 49,
                            Name = "mhpvahax",
                            Price = 433m
                        },
                        new
                        {
                            Id = 50,
                            Name = "2qacz0u3",
                            Price = 122.22m
                        });
                });

            modelBuilder.Entity("DotNetAcademy.BikeShop.Domain.Models.ShoppingBag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("ShoppingBags");
                });

            modelBuilder.Entity("DotNetAcademy.BikeShop.Domain.Models.ShoppingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BagId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BagId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShoppingItems");
                });

            modelBuilder.Entity("DotNetAcademy.BikeShop.Infrastructure.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("DotNetAcademy.BikeShop.Domain.Models.ShoppingBag", b =>
                {
                    b.HasOne("DotNetAcademy.BikeShop.Infrastructure.Models.Customer", null)
                        .WithMany("Bags")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("DotNetAcademy.BikeShop.Domain.Models.ShoppingItem", b =>
                {
                    b.HasOne("DotNetAcademy.BikeShop.Domain.Models.ShoppingBag", "Bag")
                        .WithMany("Items")
                        .HasForeignKey("BagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetAcademy.BikeShop.Domain.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DotNetAcademy.BikeShop.Infrastructure.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DotNetAcademy.BikeShop.Infrastructure.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetAcademy.BikeShop.Infrastructure.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DotNetAcademy.BikeShop.Infrastructure.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

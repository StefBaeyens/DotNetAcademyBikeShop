// <auto-generated />
using System;
using DotNetAcademy.BikeShop.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotNetAcademy.BikeShop.Infrastructure.Migrations
{
    [DbContext(typeof(BikeShopDbContext))]
    [Migration("20201105132546_OneBagPerCustomer")]
    partial class OneBagPerCustomer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DotNetAcademy.BikeShop.Domain.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "53cjpamf",
                            Price = 189.31m
                        },
                        new
                        {
                            Id = 2,
                            Name = "ktnrwwaz",
                            Price = 284.35m
                        },
                        new
                        {
                            Id = 3,
                            Name = "wtdo4aiu",
                            Price = 332.71m
                        },
                        new
                        {
                            Id = 4,
                            Name = "4tumijal",
                            Price = 487.41m
                        },
                        new
                        {
                            Id = 5,
                            Name = "wtkzgmcc",
                            Price = 56.88m
                        },
                        new
                        {
                            Id = 6,
                            Name = "1ibbh4mu",
                            Price = 175.75m
                        },
                        new
                        {
                            Id = 7,
                            Name = "igktbcia",
                            Price = 206.84m
                        },
                        new
                        {
                            Id = 8,
                            Name = "v2w2nzlf",
                            Price = 346.68m
                        },
                        new
                        {
                            Id = 9,
                            Name = "ikyfy5g5",
                            Price = 352.89m
                        },
                        new
                        {
                            Id = 10,
                            Name = "tky0fuwq",
                            Price = 25.25m
                        },
                        new
                        {
                            Id = 11,
                            Name = "kc5et2ul",
                            Price = 258.51m
                        },
                        new
                        {
                            Id = 12,
                            Name = "k2cfpvo2",
                            Price = 474.1m
                        },
                        new
                        {
                            Id = 13,
                            Name = "1lnumv3z",
                            Price = 205.58m
                        },
                        new
                        {
                            Id = 14,
                            Name = "wndcoewb",
                            Price = 418.17m
                        },
                        new
                        {
                            Id = 15,
                            Name = "txemwm4z",
                            Price = 118.96m
                        },
                        new
                        {
                            Id = 16,
                            Name = "bay3hw4g",
                            Price = 364.69m
                        },
                        new
                        {
                            Id = 17,
                            Name = "dafjw2dj",
                            Price = 272.87m
                        },
                        new
                        {
                            Id = 18,
                            Name = "rgzvhq4o",
                            Price = 408.99m
                        },
                        new
                        {
                            Id = 19,
                            Name = "ydlejfvk",
                            Price = 217.41m
                        },
                        new
                        {
                            Id = 20,
                            Name = "ephky1vu",
                            Price = 232.2m
                        },
                        new
                        {
                            Id = 21,
                            Name = "p4fbx3g4",
                            Price = 499.04m
                        },
                        new
                        {
                            Id = 22,
                            Name = "smschz5o",
                            Price = 461.32m
                        },
                        new
                        {
                            Id = 23,
                            Name = "5vuehdfp",
                            Price = 215.83m
                        },
                        new
                        {
                            Id = 24,
                            Name = "k4cxsifg",
                            Price = 303.89m
                        },
                        new
                        {
                            Id = 25,
                            Name = "hjhkq3fs",
                            Price = 98.96m
                        },
                        new
                        {
                            Id = 26,
                            Name = "klijai51",
                            Price = 431.21m
                        },
                        new
                        {
                            Id = 27,
                            Name = "tfxvlqve",
                            Price = 46.42m
                        },
                        new
                        {
                            Id = 28,
                            Name = "smay2bau",
                            Price = 261.44m
                        },
                        new
                        {
                            Id = 29,
                            Name = "rgytcodu",
                            Price = 89.39m
                        },
                        new
                        {
                            Id = 30,
                            Name = "nousckyy",
                            Price = 452.48m
                        },
                        new
                        {
                            Id = 31,
                            Name = "ianbjqqh",
                            Price = 266.82m
                        },
                        new
                        {
                            Id = 32,
                            Name = "jyq11lxk",
                            Price = 5.67m
                        },
                        new
                        {
                            Id = 33,
                            Name = "naasbu0s",
                            Price = 278.12m
                        },
                        new
                        {
                            Id = 34,
                            Name = "hipkev4g",
                            Price = 280.19m
                        },
                        new
                        {
                            Id = 35,
                            Name = "0q2utxym",
                            Price = 307.86m
                        },
                        new
                        {
                            Id = 36,
                            Name = "2r2astcg",
                            Price = 57.32m
                        },
                        new
                        {
                            Id = 37,
                            Name = "b2teizpb",
                            Price = 373.34m
                        },
                        new
                        {
                            Id = 38,
                            Name = "vbqawc25",
                            Price = 141.4m
                        },
                        new
                        {
                            Id = 39,
                            Name = "ml2loy4x",
                            Price = 283.99m
                        },
                        new
                        {
                            Id = 40,
                            Name = "ipvegjgu",
                            Price = 179.8m
                        },
                        new
                        {
                            Id = 41,
                            Name = "2hxvjd42",
                            Price = 238.22m
                        },
                        new
                        {
                            Id = 42,
                            Name = "krvzvpnk",
                            Price = 345.58m
                        },
                        new
                        {
                            Id = 43,
                            Name = "k2jbxqd3",
                            Price = 133.3m
                        },
                        new
                        {
                            Id = 44,
                            Name = "ngc43dl0",
                            Price = 91.02m
                        },
                        new
                        {
                            Id = 45,
                            Name = "aql4ux1t",
                            Price = 346.72m
                        },
                        new
                        {
                            Id = 46,
                            Name = "exn4y3sw",
                            Price = 287.99m
                        },
                        new
                        {
                            Id = 47,
                            Name = "xnafemeb",
                            Price = 126.54m
                        },
                        new
                        {
                            Id = 48,
                            Name = "1x4u3kls",
                            Price = 83.2m
                        },
                        new
                        {
                            Id = 49,
                            Name = "ad3n2tye",
                            Price = 137.02m
                        },
                        new
                        {
                            Id = 50,
                            Name = "jmlna1fr",
                            Price = 205.1m
                        });
                });

            modelBuilder.Entity("DotNetAcademy.BikeShop.Domain.Models.ShoppingBag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShoppingBags");
                });

            modelBuilder.Entity("DotNetAcademy.BikeShop.Domain.Models.ShoppingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BagId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BagId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShoppingItems");
                });

            modelBuilder.Entity("DotNetAcademy.BikeShop.Infrastructure.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("BagsId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("BagsId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("DotNetAcademy.BikeShop.Domain.Models.ShoppingItem", b =>
                {
                    b.HasOne("DotNetAcademy.BikeShop.Domain.Models.ShoppingBag", "Bag")
                        .WithMany("Items")
                        .HasForeignKey("BagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetAcademy.BikeShop.Domain.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DotNetAcademy.BikeShop.Infrastructure.Models.Customer", b =>
                {
                    b.HasOne("DotNetAcademy.BikeShop.Domain.Models.ShoppingBag", "Bags")
                        .WithMany()
                        .HasForeignKey("BagsId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DotNetAcademy.BikeShop.Infrastructure.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DotNetAcademy.BikeShop.Infrastructure.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetAcademy.BikeShop.Infrastructure.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DotNetAcademy.BikeShop.Infrastructure.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
